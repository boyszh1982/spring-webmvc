<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<display-name></display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/spring-*.xml</param-value>
	</context-param>

	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		<init-param>  
            <param-name>logLevel</param-name>  
            <param-value>INFO</param-value>  
        </init-param>
	</filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>  
        <dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>DelegatingFilterProxy</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>defenseFilter</param-value>
		</init-param>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>DelegatingFilterProxy</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 让容器(Tomcat,Jboss..)使用默认default servlet加载静态资源，防止spring mvc屏蔽。应放在web.xml上边的位置。 
		如果spring mvc 配置了 *.do,则以下内容可以忽略 -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.css</url-pattern>
		<url-pattern>*.png</url-pattern>
		<url-pattern>*.gif</url-pattern>
		<url-pattern>*.html</url-pattern>
		<url-pattern>*.htm</url-pattern>
		<!-- 按目录过滤，结合 <mvc:resources mapping="/static/**" location="/WEB-INF/static/"/> -->
		<url-pattern>/static/*</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>spring webmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/spring-webmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring webmvc</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>


	<!--begin.20160509 原本想实现在JSP中展示OFFICE，结果不好用，到时可以提供下载OFFICE。 -->
	<servlet>
		<servlet-name>MSOfficeViewServlet</servlet-name>
		<servlet-class>com.boyz.servlet.MSOfficeViewServlet</servlet-class>
	</servlet>
	<!-- msoffice展示 -->
	<servlet-mapping>
		<servlet-name>MSOfficeViewServlet</servlet-name>
		<url-pattern>/MSOfficeViewServlet.servlet</url-pattern>
	</servlet-mapping>
	<!-- 在JSP中展示EXCEL -->
	<mime-mapping>
		<extension>xls</extension>
		<mime-type>application/vnd.ms-excel</mime-type>
	</mime-mapping>
	<!-- end.20160509 -->

	<welcome-file-list>
		<welcome-file>welcome.jsp</welcome-file>
	</welcome-file-list>

</web-app>
